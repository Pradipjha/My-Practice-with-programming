<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
               http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">  

    <!-- default-init-method="init" default-destroy-method="destroy" can be used in beans to provide a common init and destroy method-->
    <!-- This bean shows that "Prototype" scope creates different instances form bean every time an object is created -->
<bean id="restaurantPrototypeBeanScopeBean" class="org.pradip.SpringTestBeanScope.RestaurantPrototypeBeanScope" scope="prototype" init-method = "init" destroy-method = "destroy">
    <property name="welcomeNote" value="Welcome to our Restaurant!!"/>
</bean>

 <!-- This bean shows that "Singleton" scope creates same instances from bean every time an object is created -->
 <!-- lazy-init = "true" (default option when BeanFactory is used) enable spring to load the bean or object at the time of creation instead of at the begining which happens in pre-loading (by default by ApplicationContext)-->
<bean id="restaurantSingletonBeanScopeBean" class="org.pradip.SpringTestBeanScope.RestaurantSingletonBeanScope" scope="singleton" lazy-init = "true">
    <property name="welcomeNote" value="Welcome to our Restaurant!!"/>
</bean>

<!-- Bean to show Bean life cycle -->
<bean id="restaurantLifeCycleAnnotationBean" class="org.pradip.SpringTestBeanScope.RestaurantLifeCycleAnnotation">
    <property name="welcomeNote" value="Using Annotation: Welcome to our Restaurant!!"/>
</bean>

<!-- Bean to show Bean life cycle using InitializingBean and DisposableBean-->
<bean id="restaurantLifeCycleUsingInterfaceBean" class="org.pradip.SpringTestBeanScope.RestaurantLifeCycleUsingInterface">
    <property name="welcomeNote" value="Using Interface: Welcome to our Restaurant!!"/>
</bean>

<bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor"/>
</beans>